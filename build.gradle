plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.8-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.8pi'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.apache.poi:poi-ooxml:5.2.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.apache.poi:poi:3.15'
	implementation 'org.apache.poi:poi-ooxml:3.15'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2' // Swagger
	//For Object Storage(AWS S3 API)
	implementation platform('software.amazon.awssdk:bom:2.23.7')
	implementation "software.amazon.awssdk:s3"
	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	// JWT Token
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	// com.sun.xml.bind
	implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
	implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
	// javax.xml.bind
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}

processResources.dependsOn('copyGitSubmodule')
tasks.register('copyGitSubmodule', Copy) {
	doFirst {
		mkdir 'src/main/resources'
	}
	from 'config/benepick'
	include '*.yml', 'keystore.p12'
	into 'src/main/resources'

	// Only run this task if the env is not 'prod'
	onlyIf {
		!project.hasProperty('env') || !project.env.equals('prod')
	}
}

tasks.named('test') {
	useJUnitPlatform()
}